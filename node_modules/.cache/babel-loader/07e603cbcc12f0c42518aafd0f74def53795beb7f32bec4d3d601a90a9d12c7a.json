{"ast":null,"code":"var _jsxFileName = \"D:\\\\zodiac signs daily horoscope today\\\\src\\\\components\\\\common\\\\LanguageSelector.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { SUPPORTED_LANGUAGES } from '../../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageSelector = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // 从当前路径获取语言\n  const getCurrentLanguage = () => {\n    const pathSegments = location.pathname.split('/').filter(Boolean);\n    return pathSegments[0] === 'zh' ? 'zh' : 'en';\n  };\n  const currentLang = getCurrentLanguage();\n  const switchLanguage = newLang => {\n    const pathSegments = location.pathname.split('/').filter(Boolean);\n\n    // 移除当前语言前缀（如果存在）\n    if (pathSegments[0] === 'zh') {\n      pathSegments.shift();\n    }\n\n    // 构建新路径\n    let newPath;\n    if (newLang === 'zh') {\n      // 中文：添加 /zh 前缀\n      newPath = '/zh/' + pathSegments.join('/');\n    } else {\n      // 英文：不添加前缀\n      newPath = '/' + pathSegments.join('/');\n    }\n\n    // 确保路径格式正确\n    newPath = newPath.replace(/\\/+/g, '/'); // 移除多余的斜杠\n    if (newPath === '/') newPath = newLang === 'zh' ? '/zh' : '/';\n    navigate(newPath);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed top-4 right-4 z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white/90 dark:bg-gray-800/90 backdrop-blur-sm rounded-lg shadow-lg p-2 flex gap-2\",\n      children: Object.entries(SUPPORTED_LANGUAGES).map(([code, lang]) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => switchLanguage(code),\n        className: `px-3 py-1 rounded text-sm font-medium transition-all duration-200 ${currentLang === code ? 'bg-gradient-to-r from-orange-400 to-pink-500 text-white shadow-md' : 'text-gray-600 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-700'}`,\n        children: [lang.flag, \" \", lang.nativeName]\n      }, code, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(LanguageSelector, \"VDZHUspDq9N5O9RWjniBrjgIdAA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = LanguageSelector;\nexport default LanguageSelector;\nvar _c;\n$RefreshReg$(_c, \"LanguageSelector\");","map":{"version":3,"names":["React","useNavigate","useLocation","SUPPORTED_LANGUAGES","jsxDEV","_jsxDEV","LanguageSelector","_s","navigate","location","getCurrentLanguage","pathSegments","pathname","split","filter","Boolean","currentLang","switchLanguage","newLang","shift","newPath","join","replace","className","children","Object","entries","map","code","lang","onClick","flag","nativeName","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/zodiac signs daily horoscope today/src/components/common/LanguageSelector.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { SUPPORTED_LANGUAGES } from '../../utils/constants';\r\n\r\nconst LanguageSelector = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  \r\n  // 从当前路径获取语言\r\n  const getCurrentLanguage = () => {\r\n    const pathSegments = location.pathname.split('/').filter(Boolean);\r\n    return pathSegments[0] === 'zh' ? 'zh' : 'en';\r\n  };\r\n  \r\n  const currentLang = getCurrentLanguage();\r\n  \r\n  const switchLanguage = (newLang) => {\r\n    const pathSegments = location.pathname.split('/').filter(Boolean);\r\n    \r\n    // 移除当前语言前缀（如果存在）\r\n    if (pathSegments[0] === 'zh') {\r\n      pathSegments.shift();\r\n    }\r\n    \r\n    // 构建新路径\r\n    let newPath;\r\n    if (newLang === 'zh') {\r\n      // 中文：添加 /zh 前缀\r\n      newPath = '/zh/' + pathSegments.join('/');\r\n    } else {\r\n      // 英文：不添加前缀\r\n      newPath = '/' + pathSegments.join('/');\r\n    }\r\n    \r\n    // 确保路径格式正确\r\n    newPath = newPath.replace(/\\/+/g, '/'); // 移除多余的斜杠\r\n    if (newPath === '/') newPath = newLang === 'zh' ? '/zh' : '/';\r\n    \r\n    navigate(newPath);\r\n  };\r\n  \r\n  return (\r\n    <div className=\"fixed top-4 right-4 z-50\">\r\n      <div className=\"bg-white/90 dark:bg-gray-800/90 backdrop-blur-sm rounded-lg shadow-lg p-2 flex gap-2\">\r\n        {Object.entries(SUPPORTED_LANGUAGES).map(([code, lang]) => (\r\n          <button\r\n            key={code}\r\n            onClick={() => switchLanguage(code)}\r\n            className={`px-3 py-1 rounded text-sm font-medium transition-all duration-200 ${\r\n              currentLang === code\r\n                ? 'bg-gradient-to-r from-orange-400 to-pink-500 text-white shadow-md'\r\n                : 'text-gray-600 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-700'\r\n            }`}\r\n          >\r\n            {lang.flag} {lang.nativeName}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LanguageSelector;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,mBAAmB,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMQ,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,MAAMC,YAAY,GAAGF,QAAQ,CAACG,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC;IACjE,OAAOJ,YAAY,CAAC,CAAC,CAAC,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI;EAC/C,CAAC;EAED,MAAMK,WAAW,GAAGN,kBAAkB,CAAC,CAAC;EAExC,MAAMO,cAAc,GAAIC,OAAO,IAAK;IAClC,MAAMP,YAAY,GAAGF,QAAQ,CAACG,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC;;IAEjE;IACA,IAAIJ,YAAY,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;MAC5BA,YAAY,CAACQ,KAAK,CAAC,CAAC;IACtB;;IAEA;IACA,IAAIC,OAAO;IACX,IAAIF,OAAO,KAAK,IAAI,EAAE;MACpB;MACAE,OAAO,GAAG,MAAM,GAAGT,YAAY,CAACU,IAAI,CAAC,GAAG,CAAC;IAC3C,CAAC,MAAM;MACL;MACAD,OAAO,GAAG,GAAG,GAAGT,YAAY,CAACU,IAAI,CAAC,GAAG,CAAC;IACxC;;IAEA;IACAD,OAAO,GAAGA,OAAO,CAACE,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;IACxC,IAAIF,OAAO,KAAK,GAAG,EAAEA,OAAO,GAAGF,OAAO,KAAK,IAAI,GAAG,KAAK,GAAG,GAAG;IAE7DV,QAAQ,CAACY,OAAO,CAAC;EACnB,CAAC;EAED,oBACEf,OAAA;IAAKkB,SAAS,EAAC,0BAA0B;IAAAC,QAAA,eACvCnB,OAAA;MAAKkB,SAAS,EAAC,sFAAsF;MAAAC,QAAA,EAClGC,MAAM,CAACC,OAAO,CAACvB,mBAAmB,CAAC,CAACwB,GAAG,CAAC,CAAC,CAACC,IAAI,EAAEC,IAAI,CAAC,kBACpDxB,OAAA;QAEEyB,OAAO,EAAEA,CAAA,KAAMb,cAAc,CAACW,IAAI,CAAE;QACpCL,SAAS,EAAE,qEACTP,WAAW,KAAKY,IAAI,GAChB,mEAAmE,GACnE,2EAA2E,EAC9E;QAAAJ,QAAA,GAEFK,IAAI,CAACE,IAAI,EAAC,GAAC,EAACF,IAAI,CAACG,UAAU;MAAA,GARvBJ,IAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASH,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAxDID,gBAAgB;EAAA,QACHL,WAAW,EACXC,WAAW;AAAA;AAAAmC,EAAA,GAFxB/B,gBAAgB;AA0DtB,eAAeA,gBAAgB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}