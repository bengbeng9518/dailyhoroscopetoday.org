{"ast":null,"code":"var _jsxFileName = \"D:\\\\zodiac signs daily horoscope today\\\\src\\\\components\\\\common\\\\LanguageSelector.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { SUPPORTED_LANGUAGES } from '../../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageSelector = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // 从当前路径获取语言\n  const getCurrentLanguage = () => {\n    const pathSegments = location.pathname.split('/');\n    return pathSegments[1] || 'en';\n  };\n  const currentLang = getCurrentLanguage();\n  const switchLanguage = newLang => {\n    const pathSegments = location.pathname.split('/');\n    pathSegments[1] = newLang;\n    const newPath = pathSegments.join('/');\n    navigate(newPath);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed top-4 right-4 z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white dark:bg-gray-800 rounded-lg shadow-lg p-2 flex gap-2\",\n      children: Object.entries(SUPPORTED_LANGUAGES).slice(0, 2).map(([code, lang]) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => switchLanguage(code),\n        className: `px-3 py-1 rounded text-sm font-medium transition-colors ${currentLang === code ? 'bg-purple-600 text-white' : 'text-gray-600 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-700'}`,\n        children: [lang.flag, \" \", lang.nativeName]\n      }, code, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(LanguageSelector, \"VDZHUspDq9N5O9RWjniBrjgIdAA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = LanguageSelector;\nexport default LanguageSelector;\nvar _c;\n$RefreshReg$(_c, \"LanguageSelector\");","map":{"version":3,"names":["React","useNavigate","useLocation","SUPPORTED_LANGUAGES","jsxDEV","_jsxDEV","LanguageSelector","_s","navigate","location","getCurrentLanguage","pathSegments","pathname","split","currentLang","switchLanguage","newLang","newPath","join","className","children","Object","entries","slice","map","code","lang","onClick","flag","nativeName","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/zodiac signs daily horoscope today/src/components/common/LanguageSelector.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { SUPPORTED_LANGUAGES } from '../../utils/constants';\r\n\r\nconst LanguageSelector = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  \r\n  // 从当前路径获取语言\r\n  const getCurrentLanguage = () => {\r\n    const pathSegments = location.pathname.split('/');\r\n    return pathSegments[1] || 'en';\r\n  };\r\n  \r\n  const currentLang = getCurrentLanguage();\r\n  \r\n  const switchLanguage = (newLang) => {\r\n    const pathSegments = location.pathname.split('/');\r\n    pathSegments[1] = newLang;\r\n    const newPath = pathSegments.join('/');\r\n    navigate(newPath);\r\n  };\r\n  \r\n  return (\r\n    <div className=\"fixed top-4 right-4 z-50\">\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg p-2 flex gap-2\">\r\n        {Object.entries(SUPPORTED_LANGUAGES).slice(0, 2).map(([code, lang]) => (\r\n          <button\r\n            key={code}\r\n            onClick={() => switchLanguage(code)}\r\n            className={`px-3 py-1 rounded text-sm font-medium transition-colors ${\r\n              currentLang === code\r\n                ? 'bg-purple-600 text-white'\r\n                : 'text-gray-600 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-700'\r\n            }`}\r\n          >\r\n            {lang.flag} {lang.nativeName}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LanguageSelector;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,mBAAmB,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMQ,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,MAAMC,YAAY,GAAGF,QAAQ,CAACG,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC;IACjD,OAAOF,YAAY,CAAC,CAAC,CAAC,IAAI,IAAI;EAChC,CAAC;EAED,MAAMG,WAAW,GAAGJ,kBAAkB,CAAC,CAAC;EAExC,MAAMK,cAAc,GAAIC,OAAO,IAAK;IAClC,MAAML,YAAY,GAAGF,QAAQ,CAACG,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC;IACjDF,YAAY,CAAC,CAAC,CAAC,GAAGK,OAAO;IACzB,MAAMC,OAAO,GAAGN,YAAY,CAACO,IAAI,CAAC,GAAG,CAAC;IACtCV,QAAQ,CAACS,OAAO,CAAC;EACnB,CAAC;EAED,oBACEZ,OAAA;IAAKc,SAAS,EAAC,0BAA0B;IAAAC,QAAA,eACvCf,OAAA;MAAKc,SAAS,EAAC,+DAA+D;MAAAC,QAAA,EAC3EC,MAAM,CAACC,OAAO,CAACnB,mBAAmB,CAAC,CAACoB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC,CAACC,IAAI,EAAEC,IAAI,CAAC,kBAChErB,OAAA;QAEEsB,OAAO,EAAEA,CAAA,KAAMZ,cAAc,CAACU,IAAI,CAAE;QACpCN,SAAS,EAAE,2DACTL,WAAW,KAAKW,IAAI,GAChB,0BAA0B,GAC1B,2EAA2E,EAC9E;QAAAL,QAAA,GAEFM,IAAI,CAACE,IAAI,EAAC,GAAC,EAACF,IAAI,CAACG,UAAU;MAAA,GARvBJ,IAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASH,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAtCID,gBAAgB;EAAA,QACHL,WAAW,EACXC,WAAW;AAAA;AAAAgC,EAAA,GAFxB5B,gBAAgB;AAwCtB,eAAeA,gBAAgB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}