{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { SUPPORTED_LANGUAGES, DEFAULT_LANGUAGE } from '../utils/constants';\nexport const useLanguage = () => {\n  _s();\n  const {\n    lang\n  } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [currentLanguage, setCurrentLanguage] = useState(DEFAULT_LANGUAGE);\n  useEffect(() => {\n    // 验证URL中的语言参数\n    if (lang && SUPPORTED_LANGUAGES[lang]) {\n      setCurrentLanguage(lang);\n      localStorage.setItem('preferred-language', lang);\n    } else if (!lang) {\n      // 检测浏览器语言或使用存储的偏好\n      const savedLang = localStorage.getItem('preferred-language');\n      const browserLang = navigator.language.split('-')[0];\n      const detectedLang = SUPPORTED_LANGUAGES[savedLang] ? savedLang : SUPPORTED_LANGUAGES[browserLang] ? browserLang : DEFAULT_LANGUAGE;\n      setCurrentLanguage(detectedLang);\n      navigate(`/${detectedLang}${location.pathname}`, {\n        replace: true\n      });\n    }\n  }, [lang, navigate, location.pathname]);\n  const changeLanguage = newLang => {\n    if (SUPPORTED_LANGUAGES[newLang]) {\n      const currentPath = location.pathname;\n      const newPath = currentPath.replace(`/${currentLanguage}`, `/${newLang}`);\n      navigate(newPath);\n    }\n  };\n  return {\n    currentLanguage,\n    changeLanguage,\n    supportedLanguages: SUPPORTED_LANGUAGES,\n    defaultLanguage: DEFAULT_LANGUAGE\n  };\n};\n_s(useLanguage, \"aealYTRroqz+tNNMx4F2DKtMFvs=\", false, function () {\n  return [useParams, useNavigate, useLocation];\n});","map":{"version":3,"names":["useState","useEffect","useParams","useNavigate","useLocation","SUPPORTED_LANGUAGES","DEFAULT_LANGUAGE","useLanguage","_s","lang","navigate","location","currentLanguage","setCurrentLanguage","localStorage","setItem","savedLang","getItem","browserLang","navigator","language","split","detectedLang","pathname","replace","changeLanguage","newLang","currentPath","newPath","supportedLanguages","defaultLanguage"],"sources":["D:/zodiac signs daily horoscope today/src/hooks/useLanguage.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\r\nimport { SUPPORTED_LANGUAGES, DEFAULT_LANGUAGE } from '../utils/constants';\r\n\r\nexport const useLanguage = () => {\r\n  const { lang } = useParams();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [currentLanguage, setCurrentLanguage] = useState(DEFAULT_LANGUAGE);\r\n\r\n  useEffect(() => {\r\n    // 验证URL中的语言参数\r\n    if (lang && SUPPORTED_LANGUAGES[lang]) {\r\n      setCurrentLanguage(lang);\r\n      localStorage.setItem('preferred-language', lang);\r\n    } else if (!lang) {\r\n      // 检测浏览器语言或使用存储的偏好\r\n      const savedLang = localStorage.getItem('preferred-language');\r\n      const browserLang = navigator.language.split('-')[0];\r\n      const detectedLang = SUPPORTED_LANGUAGES[savedLang] ? savedLang : \r\n                          SUPPORTED_LANGUAGES[browserLang] ? browserLang : \r\n                          DEFAULT_LANGUAGE;\r\n      \r\n      setCurrentLanguage(detectedLang);\r\n      navigate(`/${detectedLang}${location.pathname}`, { replace: true });\r\n    }\r\n  }, [lang, navigate, location.pathname]);\r\n\r\n  const changeLanguage = (newLang) => {\r\n    if (SUPPORTED_LANGUAGES[newLang]) {\r\n      const currentPath = location.pathname;\r\n      const newPath = currentPath.replace(`/${currentLanguage}`, `/${newLang}`);\r\n      navigate(newPath);\r\n    }\r\n  };\r\n\r\n  return {\r\n    currentLanguage,\r\n    changeLanguage,\r\n    supportedLanguages: SUPPORTED_LANGUAGES,\r\n    defaultLanguage: DEFAULT_LANGUAGE\r\n  };\r\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,EAAEC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AACtE,SAASC,mBAAmB,EAAEC,gBAAgB,QAAQ,oBAAoB;AAE1E,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM;IAAEC;EAAK,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC5B,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAACM,gBAAgB,CAAC;EAExEL,SAAS,CAAC,MAAM;IACd;IACA,IAAIQ,IAAI,IAAIJ,mBAAmB,CAACI,IAAI,CAAC,EAAE;MACrCI,kBAAkB,CAACJ,IAAI,CAAC;MACxBK,YAAY,CAACC,OAAO,CAAC,oBAAoB,EAAEN,IAAI,CAAC;IAClD,CAAC,MAAM,IAAI,CAACA,IAAI,EAAE;MAChB;MACA,MAAMO,SAAS,GAAGF,YAAY,CAACG,OAAO,CAAC,oBAAoB,CAAC;MAC5D,MAAMC,WAAW,GAAGC,SAAS,CAACC,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACpD,MAAMC,YAAY,GAAGjB,mBAAmB,CAACW,SAAS,CAAC,GAAGA,SAAS,GAC3CX,mBAAmB,CAACa,WAAW,CAAC,GAAGA,WAAW,GAC9CZ,gBAAgB;MAEpCO,kBAAkB,CAACS,YAAY,CAAC;MAChCZ,QAAQ,CAAC,IAAIY,YAAY,GAAGX,QAAQ,CAACY,QAAQ,EAAE,EAAE;QAAEC,OAAO,EAAE;MAAK,CAAC,CAAC;IACrE;EACF,CAAC,EAAE,CAACf,IAAI,EAAEC,QAAQ,EAAEC,QAAQ,CAACY,QAAQ,CAAC,CAAC;EAEvC,MAAME,cAAc,GAAIC,OAAO,IAAK;IAClC,IAAIrB,mBAAmB,CAACqB,OAAO,CAAC,EAAE;MAChC,MAAMC,WAAW,GAAGhB,QAAQ,CAACY,QAAQ;MACrC,MAAMK,OAAO,GAAGD,WAAW,CAACH,OAAO,CAAC,IAAIZ,eAAe,EAAE,EAAE,IAAIc,OAAO,EAAE,CAAC;MACzEhB,QAAQ,CAACkB,OAAO,CAAC;IACnB;EACF,CAAC;EAED,OAAO;IACLhB,eAAe;IACfa,cAAc;IACdI,kBAAkB,EAAExB,mBAAmB;IACvCyB,eAAe,EAAExB;EACnB,CAAC;AACH,CAAC;AAACE,EAAA,CAtCWD,WAAW;EAAA,QACLL,SAAS,EACTC,WAAW,EACXC,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}